#ifndef CRETE_CUSTOM_OPCODE_H
#define CRETE_CUSTOM_OPCODE_H

#if defined (_MSC_VER)
#define CRETE_INSTR_GENERATE(x, y) \
    _emit 0x0F __asm _emit 0x3F \
	__asm _emit 0x00 __asm _emit x __asm _emit y __asm _emit 0x00 \
	__asm _emit 0x00 __asm _emit 0x00 __asm _emit 0x00 __asm _emit 0x00
#else
#define CRETE_INSTR_GENERATE(x, y)            \
    ".byte 0x0F, 0x3F\n"                      \
    ".byte 0x00, " #x ", " #y ", 0x00\n"  \
    ".byte 0x00, 0x00, 0x00, 0x00\n"
#endif


// For crete-run/preload-run
#define CRETE_INSTR_PRIME_VALUE 0x020000
#define CRETE_INSTR_PRIME() CRETE_INSTR_GENERATE(0x00, 0x02)

#define CRETE_INSTR_SEND_TARGET_PID_VALUE 0x030000
#define CRETE_INSTR_SEND_TARGET_PID() CRETE_INSTR_GENERATE(0x00, 0x03)

#define CRETE_INSTR_VOID_TARGET_PID_VALUE 0x040000
#define CRETE_INSTR_VOID_TARGET_PID() CRETE_INSTR_GENERATE(0x00, 0x04)

#define CRETE_INSTR_DUMP_VALUE 0x050000
#define CRETE_INSTR_DUMP() CRETE_INSTR_GENERATE(0x00, 0x05)

// For program under test
#define CRETE_INSTR_MAKE_CONCOLIC_INTERNAL_VALUE 0x060000
#define CRETE_INSTR_MAKE_CONCOLIC_INTERNAL() CRETE_INSTR_GENERATE(0x00, 0x06)
#define CRETE_INSTR_PRE_MAKE_CONCOLIC_VALUE 0x070000
#define CRETE_INSTR_PRE_MAKE_CONCOLIC() CRETE_INSTR_GENERATE(0x00, 0x07)
#define CRETE_INSTR_SEND_CONCOLIC_NAME_VALUE 0x080000
#define CRETE_INSTR_SEND_CONCOLIC_NAME() CRETE_INSTR_GENERATE(0x00, 0x08)

#define CRETE_INSTR_CHECK_TARGET_PID_VALUE 0x0E0000
#define CRETE_INSTR_CHECK_TARGET_PID() CRETE_INSTR_GENERATE(0x00, 0x0E)


#define CRETE_INSTR_WAIT_TEST_CASE_VALUE 0x0F0000
#define CRETE_INSTR_WAIT_TEST_CASE() CRETE_INSTR_GENERATE(0x00, 0x0F)

#define CRETE_INSTR_REPORT_EXCEPT_VALUE 0x100000
#define CRETE_INSTR_REPORT_EXCEPT() CRETE_INSTR_GENERATE(0x00, 0x10)

#endif // CRETE_CUSTOM_OPCODE_H
